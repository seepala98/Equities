# Generated by Django 4.2.23 on 2025-08-31 19:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('stocks', '0006_create_status_tables'),
    ]

    operations = [
        migrations.CreateModel(
            name='ETFInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(db_index=True, max_length=32, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('isin', models.CharField(blank=True, help_text='International Securities ID', max_length=32, null=True)),
                ('expense_ratio', models.DecimalField(blank=True, decimal_places=4, help_text='Management Expense Ratio (MER)', max_digits=5, null=True)),
                ('assets_under_management', models.BigIntegerField(blank=True, help_text='Total AUM in dollars', null=True)),
                ('inception_date', models.DateField(blank=True, null=True)),
                ('fund_family', models.CharField(blank=True, help_text='e.g., Vanguard, iShares', max_length=100, null=True)),
                ('category', models.CharField(blank=True, help_text='e.g., Equity, Bond, Balanced', max_length=100, null=True)),
                ('investment_strategy', models.TextField(blank=True, null=True)),
                ('benchmark_index', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(choices=[('CAD', 'Canadian Dollar'), ('USD', 'US Dollar'), ('EUR', 'Euro')], default='CAD', max_length=8)),
                ('domicile', models.CharField(default='CA', help_text='Country of domicile', max_length=8)),
                ('distribution_frequency', models.CharField(blank=True, choices=[('Monthly', 'Monthly'), ('Quarterly', 'Quarterly'), ('Semi-Annual', 'Semi-Annual'), ('Annual', 'Annual')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ETF Information',
                'verbose_name_plural': 'ETF Information',
                'db_table': 'etf_info',
                'ordering': ['symbol'],
            },
        ),
        migrations.CreateModel(
            name='GeographicRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=100, unique=True)),
                ('country_name', models.CharField(blank=True, max_length=100, null=True)),
                ('country_code', models.CharField(blank=True, help_text='ISO country code', max_length=8, null=True)),
                ('region_type', models.CharField(blank=True, choices=[('Developed', 'Developed Markets'), ('Emerging', 'Emerging Markets'), ('Frontier', 'Frontier Markets')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'geographic_regions',
                'ordering': ['region_name', 'country_name'],
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_name', models.CharField(max_length=100, unique=True)),
                ('sector_code', models.CharField(blank=True, help_text='GICS sector code', max_length=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'sectors',
                'ordering': ['sector_name'],
            },
        ),
        migrations.AlterField(
            model_name='listing',
            name='status',
            field=models.CharField(choices=[('listed', 'Currently Listed'), ('delisted', 'Recently Delisted'), ('suspended', 'Suspended')], db_index=True, default='listed', max_length=16),
        ),
        migrations.CreateModel(
            name='StockDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market_cap', models.BigIntegerField(blank=True, help_text='Market capitalization in dollars', null=True)),
                ('industry', models.CharField(blank=True, help_text='More specific than sector', max_length=150, null=True)),
                ('headquarters_country', models.CharField(blank=True, max_length=100, null=True)),
                ('business_description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detail', to='stocks.listing')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stocks.geographicregion')),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stocks.sector')),
            ],
            options={
                'verbose_name': 'Stock Detail',
                'verbose_name_plural': 'Stock Details',
                'db_table': 'stock_details',
            },
        ),
        migrations.CreateModel(
            name='ETFSectorAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation_percentage', models.DecimalField(decimal_places=4, max_digits=8)),
                ('as_of_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('etf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sector_allocations', to='stocks.etfinfo')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.sector')),
            ],
            options={
                'db_table': 'etf_sector_allocation',
                'ordering': ['-allocation_percentage'],
                'unique_together': {('etf', 'sector', 'as_of_date')},
            },
        ),
        migrations.CreateModel(
            name='ETFHolding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight_percentage', models.DecimalField(decimal_places=4, help_text='Percentage weight in ETF (e.g., 5.25)', max_digits=8)),
                ('shares_held', models.BigIntegerField(blank=True, help_text='Number of shares held', null=True)),
                ('market_value', models.BigIntegerField(blank=True, help_text='Market value of holding in dollars', null=True)),
                ('as_of_date', models.DateField(help_text='Holdings as of this date')),
                ('data_source', models.CharField(blank=True, help_text='Where data came from (e.g., yfinance, vanguard)', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('etf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='stocks.etfinfo')),
                ('stock_listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etf_holdings', to='stocks.listing')),
            ],
            options={
                'db_table': 'etf_holdings',
                'ordering': ['-weight_percentage'],
                'indexes': [models.Index(fields=['etf', '-weight_percentage'], name='etf_holding_etf_id_d07827_idx'), models.Index(fields=['as_of_date'], name='etf_holding_as_of_d_1f1188_idx')],
                'unique_together': {('etf', 'stock_listing', 'as_of_date')},
            },
        ),
        migrations.CreateModel(
            name='ETFGeographicAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation_percentage', models.DecimalField(decimal_places=4, max_digits=8)),
                ('as_of_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('etf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geographic_allocations', to='stocks.etfinfo')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.geographicregion')),
            ],
            options={
                'db_table': 'etf_geographic_allocation',
                'ordering': ['-allocation_percentage'],
                'unique_together': {('etf', 'region', 'as_of_date')},
            },
        ),
    ]
